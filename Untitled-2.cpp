#include <iostream> 
#include <string>
using namespace std;

// Функция для определения количества символов, которые необходимо скопировать
size_t number_copy_operation (const string& s)
{
  // Начинаем с конца строки
  size_t i = s.size() - (s.size() % 2); // Находим середину строки
  size_t middle = i / 2;

  // Проходим через строку в обратном направлении, начиная с конца
  for (; i > middle; --i)
  {
    // Если текущий символ не совпадает с соответствующим символом относительно середины
    if (s[i-1] != s[i - middle - 1])
    {
      // Уменьшаем индекс, если текущая позиция нечетная
      i -= !(i % 2);
      // Обновляем середину
      middle = i / 2;
    }
  }

  // Возвращаем половину длины палиндрома (или длину палиндрома, если она четная)
  return middle;
}

int main()
{
  // Вводим строку
  string s;
  cin >> s;
  
  // Получаем количество символов для копирования
  size_t num = number_copy_operation(s);
  // Вычисляем общее количество операций копирования
  size_t operationsCnt = s.size() - num + (num != 0);

  // Выводим количество операций копирования
  cout << "operations count: " << operationsCnt;

  // Выполняем операции копирования
  for (size_t i = 0; i < operationsCnt; ++i)
  {
    // Вычисляем длину части строки для копирования
    size_t lenOutStr = i + (i < num || num == 0 ? 1 : num);

    // Выводим операцию копирования в формате " = " или " -> "
    cout << (i > 0 ? "->" : " = ") << s.substr(0, lenOutStr);
  }
}
